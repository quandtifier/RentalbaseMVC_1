@model PagedList.IPagedList<Rentalbase.Models.Property>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Properties";
}

<h2>Properties</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<!---->
@using (Html.BeginForm("Index", "Property", FormMethod.Get))
{
    <p>
        <!---->
        Find by Keyword: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            <!--A filter action is applied to using this link -->
            @Html.ActionLink("Reverse Order", "Index", new { sortOrder = ViewBag.IDSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>Street</th>
        <th>
            @Html.ActionLink("City", "Index", new { sortOrder = ViewBag.CitySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>State</th>
        <th>Zip</th>
        <th>Value</th>
        <th>Manager Name</th>
        <th>Type</th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
    <tr>
        <td></td>
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.State)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Zip)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Value)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Landlord.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PropertyType.Type)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
        </td>
    </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))